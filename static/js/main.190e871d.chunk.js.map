{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","todoId","onSelectTodo","onSelectUser","className","map","todo","cn","id","completed","title","type","onClick","userId","TodoFilter","selectedField","onSelectField","onQuery","query","value","onChange","event","target","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","response","ok","Error","status","statusText","json","getUser","TodoModal","onClose","useState","user","setUser","loadUser","a","userFromServer","useEffect","href","email","name","App","setTodos","setTodoId","setUserId","setSelectedField","setQuery","loadTodos","todosFromServer","visibleTodos","filter","lowerQuery","toLowerCase","includes","field","description","length","find","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.190e871d.chunk.js","sourcesContent":["import React from 'react';\nimport cn from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n  todoId: number;\n  onSelectTodo: (id: number) => void;\n  onSelectUser: (id: number) => void;\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  todoId,\n  onSelectTodo,\n  onSelectUser,\n}) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map(todo => (\n          <tr\n            key={todo.id}\n            data-cy=\"todo\"\n            className={cn({\n              'has-background-info-light': todo.id === todoId,\n            })}\n          >\n            <td className=\"is-vcentered\">{todo.id}</td>\n            {!todo.completed && (\n              <td className=\"is-vcentered\" />\n            )}\n            {todo.completed && (\n              <td className=\"is-vcentered\">\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              </td>\n            )}\n            <td className=\"is-vcentered is-expanded\">\n              <p className={cn('has-text-success', {\n                'has-text-danger': !todo.completed,\n              })}\n              >\n                {todo.title}\n              </p>\n            </td>\n            {todo.id === todoId\n              ? (\n                <td className=\"has-text-right is-vcentered\">\n                  <button\n                    data-cy=\"selectButton\"\n                    className=\"button\"\n                    type=\"button\"\n                  >\n                    <span className=\"icon\">\n                      <i className=\"far fa-eye-slash\" />\n                    </span>\n                  </button>\n                </td>\n              )\n              : (\n                <td className=\"has-text-right is-vcentered\">\n                  <button\n                    data-cy=\"selectButton\"\n                    className=\"button\"\n                    type=\"button\"\n                    onClick={() => {\n                      onSelectTodo(todo.id);\n                      onSelectUser(todo.userId);\n                    }}\n                  >\n                    <span className=\"icon\">\n                      <i className=\"far fa-eye\" />\n                    </span>\n                  </button>\n                </td>\n              )}\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","type Props = {\n  selectedField: string;\n  onSelectField: (value: string) => void;\n  onQuery: (value: string) => void;\n  query: string;\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  selectedField,\n  onSelectField,\n  onQuery,\n  query,\n}) => {\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={selectedField}\n            onChange={(event) => {\n              onSelectField(event.target.value);\n            }}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={(event) => {\n            onQuery(event.target.value);\n          }}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => {\n                onQuery('');\n              }}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promime\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see now the laoder works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(response => {\n      if (!response.ok) {\n        throw new Error(`${response.status} - ${response.statusText}`);\n      }\n\n      return response.json();\n    });\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport { Todo } from '../../types/Todo';\nimport { Loader } from '../Loader';\nimport { getUser } from '../../api';\nimport { User } from '../../types/User';\n\ntype Props = {\n  userId: number;\n  todo: Todo | null;\n  onClose: (id: number) => void;\n};\n\nexport const TodoModal: React.FC<Props> = ({ userId, todo, onClose }) => {\n  const [user, setUser] = useState<User | null>(null);\n\n  const loadUser = async () => {\n    const userFromServer = await getUser(userId);\n\n    setUser(userFromServer);\n  };\n\n  useEffect(() => {\n    loadUser();\n  }, [userId]);\n\n  /*\n  if (!user) {\n    return <p>Loading...</p>;\n  }\n*/\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${todo?.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => {\n                onClose(0);\n              }}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo?.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {/* <strong className=\"has-text-success\">Done</strong> */}\n              {todo?.completed ? (\n                <strong className=\"has-text-success\">Done</strong>\n              ) : (\n                <strong className=\"has-text-danger\">Planned</strong>\n              )}\n\n              {' by '}\n\n              <a\n                href={`mailto:${user.email}`}\n              >\n                {user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [todoId, setTodoId] = useState(0);\n  const [userId, setUserId] = useState(0);\n  const [selectedField, setSelectedField] = useState('all');\n  const [query, setQuery] = useState('');\n\n  const loadTodos = async () => {\n    const todosFromServer = await getTodos();\n\n    setTodos(todosFromServer);\n  };\n\n  useEffect(() => {\n    loadTodos();\n  }, []);\n\n  const getTodoById = (id: number) => {\n    return todos.find(todo => todo.id === id) || null;\n  };\n\n  let visibleTodos = [...todos];\n\n  if (selectedField === 'completed') {\n    visibleTodos = visibleTodos.filter(todo => todo.completed);\n  }\n\n  if (selectedField === 'active') {\n    visibleTodos = visibleTodos.filter(todo => !todo.completed);\n  }\n\n  if (query) {\n    const lowerQuery = query.toLowerCase();\n\n    visibleTodos = visibleTodos.filter(todo => (\n      todo.title.toLowerCase().includes(lowerQuery)));\n  }\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                selectedField={selectedField}\n                onSelectField={(field: string) => {\n                  setSelectedField(field);\n                }}\n                onQuery={(description: string) => {\n                  setQuery(description);\n                }}\n                query={query}\n              />\n            </div>\n\n            <div className=\"block\">\n              {todos.length === 0 ? (\n                <Loader />\n              ) : (\n                <TodoList\n                  todos={visibleTodos}\n                  todoId={todoId}\n                  onSelectTodo={(id: number) => {\n                    setTodoId(id);\n                  }}\n                  onSelectUser={(id: number) => {\n                    setUserId(id);\n                  }}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n      {todoId !== 0 && (\n        <TodoModal\n          userId={userId}\n          todo={getTodoById(todoId)}\n          onClose={(id: number) => {\n            setTodoId(id);\n          }}\n        />\n      )}\n\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}